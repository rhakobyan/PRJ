plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.kie:kie-ci:7.49.0.Final'
	implementation 'org.drools:drools-core:7.49.0.Final'
	implementation 'org.drools:drools-compiler:7.49.0.Final'
	implementation 'org.antlr:antlr4-runtime:4.9.1'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'

}

test {
	useJUnitPlatform()
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}

	uiIntegrationTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly

	uiIntegrationTestImplementation.extendsFrom testImplementation
	uiIntegrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
	description = 'Runs the integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	useJUnitPlatform()

	reports {
		html.enabled true
		junitXml.enabled = true
	}
	shouldRunAfter test
}

task uiIntegrationTest(type: Test) {
	description = 'Runs the user interface integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.uiIntegrationTest.output.classesDirs
	classpath = sourceSets.uiIntegrationTest.runtimeClasspath

	useJUnitPlatform()

	reports {
		html.enabled true
		junitXml.enabled = true
	}
	shouldRunAfter test
}